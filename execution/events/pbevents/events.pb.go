// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/hyperledger/burrow/execution/events/pbevents/events.proto

package pbevents // import "github.com/hyperledger/burrow/execution/events/pbevents"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import errors "github.com/hyperledger/burrow/execution/errors"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Bound_BoundType int32

const (
	// Index is absolute index of object in collection
	Bound_ABSOLUTE Bound_BoundType = 0
	// Index is an offset reltiave to another bound determined by context
	Bound_RELATIVE Bound_BoundType = 1
	// Ignore provided index and evaluate to latest index
	Bound_LATEST Bound_BoundType = 2
	// Ignore provided index and stream new objects as they are generated
	Bound_STREAM Bound_BoundType = 3
)

var Bound_BoundType_name = map[int32]string{
	0: "ABSOLUTE",
	1: "RELATIVE",
	2: "LATEST",
	3: "STREAM",
}
var Bound_BoundType_value = map[string]int32{
	"ABSOLUTE": 0,
	"RELATIVE": 1,
	"LATEST":   2,
	"STREAM":   3,
}

func (x Bound_BoundType) String() string {
	return proto.EnumName(Bound_BoundType_name, int32(x))
}
func (Bound_BoundType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{6, 0}
}

// Params
type EventIdParam struct {
	EventId              string   `protobuf:"bytes,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventIdParam) Reset()         { *m = EventIdParam{} }
func (m *EventIdParam) String() string { return proto.CompactTextString(m) }
func (*EventIdParam) ProtoMessage()    {}
func (*EventIdParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{0}
}
func (m *EventIdParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventIdParam.Unmarshal(m, b)
}
func (m *EventIdParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventIdParam.Marshal(b, m, deterministic)
}
func (dst *EventIdParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventIdParam.Merge(dst, src)
}
func (m *EventIdParam) XXX_Size() int {
	return xxx_messageInfo_EventIdParam.Size(m)
}
func (m *EventIdParam) XXX_DiscardUnknown() {
	xxx_messageInfo_EventIdParam.DiscardUnknown(m)
}

var xxx_messageInfo_EventIdParam proto.InternalMessageInfo

func (m *EventIdParam) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

type SubIdParam struct {
	SubId                string   `protobuf:"bytes,1,opt,name=subId,proto3" json:"subId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubIdParam) Reset()         { *m = SubIdParam{} }
func (m *SubIdParam) String() string { return proto.CompactTextString(m) }
func (*SubIdParam) ProtoMessage()    {}
func (*SubIdParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{1}
}
func (m *SubIdParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubIdParam.Unmarshal(m, b)
}
func (m *SubIdParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubIdParam.Marshal(b, m, deterministic)
}
func (dst *SubIdParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubIdParam.Merge(dst, src)
}
func (m *SubIdParam) XXX_Size() int {
	return xxx_messageInfo_SubIdParam.Size(m)
}
func (m *SubIdParam) XXX_DiscardUnknown() {
	xxx_messageInfo_SubIdParam.DiscardUnknown(m)
}

var xxx_messageInfo_SubIdParam proto.InternalMessageInfo

func (m *SubIdParam) GetSubId() string {
	if m != nil {
		return m.SubId
	}
	return ""
}

// Results
type EventUnSub struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventUnSub) Reset()         { *m = EventUnSub{} }
func (m *EventUnSub) String() string { return proto.CompactTextString(m) }
func (*EventUnSub) ProtoMessage()    {}
func (*EventUnSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{2}
}
func (m *EventUnSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventUnSub.Unmarshal(m, b)
}
func (m *EventUnSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventUnSub.Marshal(b, m, deterministic)
}
func (dst *EventUnSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventUnSub.Merge(dst, src)
}
func (m *EventUnSub) XXX_Size() int {
	return xxx_messageInfo_EventUnSub.Size(m)
}
func (m *EventUnSub) XXX_DiscardUnknown() {
	xxx_messageInfo_EventUnSub.DiscardUnknown(m)
}

var xxx_messageInfo_EventUnSub proto.InternalMessageInfo

func (m *EventUnSub) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type PollResponse struct {
	Events               []*ExecutionEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PollResponse) Reset()         { *m = PollResponse{} }
func (m *PollResponse) String() string { return proto.CompactTextString(m) }
func (*PollResponse) ProtoMessage()    {}
func (*PollResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{3}
}
func (m *PollResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollResponse.Unmarshal(m, b)
}
func (m *PollResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollResponse.Marshal(b, m, deterministic)
}
func (dst *PollResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollResponse.Merge(dst, src)
}
func (m *PollResponse) XXX_Size() int {
	return xxx_messageInfo_PollResponse.Size(m)
}
func (m *PollResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PollResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PollResponse proto.InternalMessageInfo

func (m *PollResponse) GetEvents() []*ExecutionEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type GetEventsRequest struct {
	BlockRange           *BlockRange `protobuf:"bytes,1,opt,name=BlockRange,proto3" json:"BlockRange,omitempty"`
	BatchSize            uint32      `protobuf:"varint,2,opt,name=BatchSize,proto3" json:"BatchSize,omitempty"`
	Query                string      `protobuf:"bytes,3,opt,name=Query,proto3" json:"Query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetEventsRequest) Reset()         { *m = GetEventsRequest{} }
func (m *GetEventsRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventsRequest) ProtoMessage()    {}
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{4}
}
func (m *GetEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsRequest.Unmarshal(m, b)
}
func (m *GetEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsRequest.Marshal(b, m, deterministic)
}
func (dst *GetEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsRequest.Merge(dst, src)
}
func (m *GetEventsRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventsRequest.Size(m)
}
func (m *GetEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsRequest proto.InternalMessageInfo

func (m *GetEventsRequest) GetBlockRange() *BlockRange {
	if m != nil {
		return m.BlockRange
	}
	return nil
}

func (m *GetEventsRequest) GetBatchSize() uint32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

func (m *GetEventsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type GetEventsResponse struct {
	Events               []*ExecutionEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetEventsResponse) Reset()         { *m = GetEventsResponse{} }
func (m *GetEventsResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventsResponse) ProtoMessage()    {}
func (*GetEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{5}
}
func (m *GetEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsResponse.Unmarshal(m, b)
}
func (m *GetEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsResponse.Marshal(b, m, deterministic)
}
func (dst *GetEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsResponse.Merge(dst, src)
}
func (m *GetEventsResponse) XXX_Size() int {
	return xxx_messageInfo_GetEventsResponse.Size(m)
}
func (m *GetEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsResponse proto.InternalMessageInfo

func (m *GetEventsResponse) GetEvents() []*ExecutionEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type Bound struct {
	Type                 Bound_BoundType `protobuf:"varint,1,opt,name=Type,proto3,enum=pbevents.Bound_BoundType" json:"Type,omitempty"`
	Index                uint64          `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Bound) Reset()         { *m = Bound{} }
func (m *Bound) String() string { return proto.CompactTextString(m) }
func (*Bound) ProtoMessage()    {}
func (*Bound) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{6}
}
func (m *Bound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bound.Unmarshal(m, b)
}
func (m *Bound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bound.Marshal(b, m, deterministic)
}
func (dst *Bound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bound.Merge(dst, src)
}
func (m *Bound) XXX_Size() int {
	return xxx_messageInfo_Bound.Size(m)
}
func (m *Bound) XXX_DiscardUnknown() {
	xxx_messageInfo_Bound.DiscardUnknown(m)
}

var xxx_messageInfo_Bound proto.InternalMessageInfo

func (m *Bound) GetType() Bound_BoundType {
	if m != nil {
		return m.Type
	}
	return Bound_ABSOLUTE
}

func (m *Bound) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

// An inclusive range of blocks to include
type BlockRange struct {
	// How to interpret StartBlock
	Start                *Bound   `protobuf:"bytes,1,opt,name=Start,proto3" json:"Start,omitempty"`
	End                  *Bound   `protobuf:"bytes,2,opt,name=End,proto3" json:"End,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRange) Reset()         { *m = BlockRange{} }
func (m *BlockRange) String() string { return proto.CompactTextString(m) }
func (*BlockRange) ProtoMessage()    {}
func (*BlockRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{7}
}
func (m *BlockRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRange.Unmarshal(m, b)
}
func (m *BlockRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRange.Marshal(b, m, deterministic)
}
func (dst *BlockRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRange.Merge(dst, src)
}
func (m *BlockRange) XXX_Size() int {
	return xxx_messageInfo_BlockRange.Size(m)
}
func (m *BlockRange) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRange.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRange proto.InternalMessageInfo

func (m *BlockRange) GetStart() *Bound {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *BlockRange) GetEnd() *Bound {
	if m != nil {
		return m.End
	}
	return nil
}

type EventHeader struct {
	// Transaction type
	TxType string `protobuf:"bytes,1,opt,name=TxType,proto3" json:"TxType,omitempty"`
	// The hash of the transaction that caused this event to be generated
	TxHash []byte `protobuf:"bytes,2,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	// The type of event
	EventType string `protobuf:"bytes,3,opt,name=EventType,proto3" json:"EventType,omitempty"`
	// EventID published with event
	EventID string `protobuf:"bytes,4,opt,name=EventID,proto3" json:"EventID,omitempty"`
	// The block height at which this event was emitted
	Height uint64 `protobuf:"varint,5,opt,name=Height,proto3" json:"Height,omitempty"`
	// The index amongst all other events in the block of this event
	Index                uint64   `protobuf:"varint,6,opt,name=Index,proto3" json:"Index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventHeader) Reset()         { *m = EventHeader{} }
func (m *EventHeader) String() string { return proto.CompactTextString(m) }
func (*EventHeader) ProtoMessage()    {}
func (*EventHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{8}
}
func (m *EventHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventHeader.Unmarshal(m, b)
}
func (m *EventHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventHeader.Marshal(b, m, deterministic)
}
func (dst *EventHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventHeader.Merge(dst, src)
}
func (m *EventHeader) XXX_Size() int {
	return xxx_messageInfo_EventHeader.Size(m)
}
func (m *EventHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_EventHeader.DiscardUnknown(m)
}

var xxx_messageInfo_EventHeader proto.InternalMessageInfo

func (m *EventHeader) GetTxType() string {
	if m != nil {
		return m.TxType
	}
	return ""
}

func (m *EventHeader) GetTxHash() []byte {
	if m != nil {
		return m.TxHash
	}
	return nil
}

func (m *EventHeader) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *EventHeader) GetEventID() string {
	if m != nil {
		return m.EventID
	}
	return ""
}

func (m *EventHeader) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *EventHeader) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ExecutionEvent struct {
	Header *EventHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	// Types that are valid to be assigned to EventData:
	//	*ExecutionEvent_EventDataTx
	//	*ExecutionEvent_EventDataCall
	//	*ExecutionEvent_EventDataLog
	EventData            isExecutionEvent_EventData `protobuf_oneof:"EventData"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ExecutionEvent) Reset()         { *m = ExecutionEvent{} }
func (m *ExecutionEvent) String() string { return proto.CompactTextString(m) }
func (*ExecutionEvent) ProtoMessage()    {}
func (*ExecutionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{9}
}
func (m *ExecutionEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionEvent.Unmarshal(m, b)
}
func (m *ExecutionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionEvent.Marshal(b, m, deterministic)
}
func (dst *ExecutionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionEvent.Merge(dst, src)
}
func (m *ExecutionEvent) XXX_Size() int {
	return xxx_messageInfo_ExecutionEvent.Size(m)
}
func (m *ExecutionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionEvent proto.InternalMessageInfo

type isExecutionEvent_EventData interface {
	isExecutionEvent_EventData()
}

type ExecutionEvent_EventDataTx struct {
	EventDataTx *EventDataTx `protobuf:"bytes,2,opt,name=EventDataTx,proto3,oneof"`
}
type ExecutionEvent_EventDataCall struct {
	EventDataCall *EventDataCall `protobuf:"bytes,3,opt,name=EventDataCall,proto3,oneof"`
}
type ExecutionEvent_EventDataLog struct {
	EventDataLog *EventDataLog `protobuf:"bytes,4,opt,name=EventDataLog,proto3,oneof"`
}

func (*ExecutionEvent_EventDataTx) isExecutionEvent_EventData()   {}
func (*ExecutionEvent_EventDataCall) isExecutionEvent_EventData() {}
func (*ExecutionEvent_EventDataLog) isExecutionEvent_EventData()  {}

func (m *ExecutionEvent) GetEventData() isExecutionEvent_EventData {
	if m != nil {
		return m.EventData
	}
	return nil
}

func (m *ExecutionEvent) GetHeader() *EventHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ExecutionEvent) GetEventDataTx() *EventDataTx {
	if x, ok := m.GetEventData().(*ExecutionEvent_EventDataTx); ok {
		return x.EventDataTx
	}
	return nil
}

func (m *ExecutionEvent) GetEventDataCall() *EventDataCall {
	if x, ok := m.GetEventData().(*ExecutionEvent_EventDataCall); ok {
		return x.EventDataCall
	}
	return nil
}

func (m *ExecutionEvent) GetEventDataLog() *EventDataLog {
	if x, ok := m.GetEventData().(*ExecutionEvent_EventDataLog); ok {
		return x.EventDataLog
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExecutionEvent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExecutionEvent_OneofMarshaler, _ExecutionEvent_OneofUnmarshaler, _ExecutionEvent_OneofSizer, []interface{}{
		(*ExecutionEvent_EventDataTx)(nil),
		(*ExecutionEvent_EventDataCall)(nil),
		(*ExecutionEvent_EventDataLog)(nil),
	}
}

func _ExecutionEvent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExecutionEvent)
	// EventData
	switch x := m.EventData.(type) {
	case *ExecutionEvent_EventDataTx:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EventDataTx); err != nil {
			return err
		}
	case *ExecutionEvent_EventDataCall:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EventDataCall); err != nil {
			return err
		}
	case *ExecutionEvent_EventDataLog:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EventDataLog); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExecutionEvent.EventData has unexpected type %T", x)
	}
	return nil
}

func _ExecutionEvent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExecutionEvent)
	switch tag {
	case 2: // EventData.EventDataTx
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventDataTx)
		err := b.DecodeMessage(msg)
		m.EventData = &ExecutionEvent_EventDataTx{msg}
		return true, err
	case 3: // EventData.EventDataCall
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventDataCall)
		err := b.DecodeMessage(msg)
		m.EventData = &ExecutionEvent_EventDataCall{msg}
		return true, err
	case 4: // EventData.EventDataLog
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventDataLog)
		err := b.DecodeMessage(msg)
		m.EventData = &ExecutionEvent_EventDataLog{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExecutionEvent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExecutionEvent)
	// EventData
	switch x := m.EventData.(type) {
	case *ExecutionEvent_EventDataTx:
		s := proto.Size(x.EventDataTx)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExecutionEvent_EventDataCall:
		s := proto.Size(x.EventDataCall)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExecutionEvent_EventDataLog:
		s := proto.Size(x.EventDataLog)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type EventDataLog struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Topics               [][]byte `protobuf:"bytes,3,rep,name=Topics,proto3" json:"Topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventDataLog) Reset()         { *m = EventDataLog{} }
func (m *EventDataLog) String() string { return proto.CompactTextString(m) }
func (*EventDataLog) ProtoMessage()    {}
func (*EventDataLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{10}
}
func (m *EventDataLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventDataLog.Unmarshal(m, b)
}
func (m *EventDataLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventDataLog.Marshal(b, m, deterministic)
}
func (dst *EventDataLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventDataLog.Merge(dst, src)
}
func (m *EventDataLog) XXX_Size() int {
	return xxx_messageInfo_EventDataLog.Size(m)
}
func (m *EventDataLog) XXX_DiscardUnknown() {
	xxx_messageInfo_EventDataLog.DiscardUnknown(m)
}

var xxx_messageInfo_EventDataLog proto.InternalMessageInfo

func (m *EventDataLog) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *EventDataLog) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *EventDataLog) GetTopics() [][]byte {
	if m != nil {
		return m.Topics
	}
	return nil
}

type EventDataTx struct {
	Return               []byte            `protobuf:"bytes,1,opt,name=Return,proto3" json:"Return,omitempty"`
	Exception            *errors.Exception `protobuf:"bytes,2,opt,name=Exception,proto3" json:"Exception,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EventDataTx) Reset()         { *m = EventDataTx{} }
func (m *EventDataTx) String() string { return proto.CompactTextString(m) }
func (*EventDataTx) ProtoMessage()    {}
func (*EventDataTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{11}
}
func (m *EventDataTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventDataTx.Unmarshal(m, b)
}
func (m *EventDataTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventDataTx.Marshal(b, m, deterministic)
}
func (dst *EventDataTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventDataTx.Merge(dst, src)
}
func (m *EventDataTx) XXX_Size() int {
	return xxx_messageInfo_EventDataTx.Size(m)
}
func (m *EventDataTx) XXX_DiscardUnknown() {
	xxx_messageInfo_EventDataTx.DiscardUnknown(m)
}

var xxx_messageInfo_EventDataTx proto.InternalMessageInfo

func (m *EventDataTx) GetReturn() []byte {
	if m != nil {
		return m.Return
	}
	return nil
}

func (m *EventDataTx) GetException() *errors.Exception {
	if m != nil {
		return m.Exception
	}
	return nil
}

type EventDataCall struct {
	CallData             *CallData         `protobuf:"bytes,1,opt,name=CallData,proto3" json:"CallData,omitempty"`
	Origin               []byte            `protobuf:"bytes,2,opt,name=Origin,proto3" json:"Origin,omitempty"`
	StackDepth           uint64            `protobuf:"varint,3,opt,name=StackDepth,proto3" json:"StackDepth,omitempty"`
	Return               []byte            `protobuf:"bytes,4,opt,name=Return,proto3" json:"Return,omitempty"`
	Exception            *errors.Exception `protobuf:"bytes,5,opt,name=Exception,proto3" json:"Exception,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EventDataCall) Reset()         { *m = EventDataCall{} }
func (m *EventDataCall) String() string { return proto.CompactTextString(m) }
func (*EventDataCall) ProtoMessage()    {}
func (*EventDataCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{12}
}
func (m *EventDataCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventDataCall.Unmarshal(m, b)
}
func (m *EventDataCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventDataCall.Marshal(b, m, deterministic)
}
func (dst *EventDataCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventDataCall.Merge(dst, src)
}
func (m *EventDataCall) XXX_Size() int {
	return xxx_messageInfo_EventDataCall.Size(m)
}
func (m *EventDataCall) XXX_DiscardUnknown() {
	xxx_messageInfo_EventDataCall.DiscardUnknown(m)
}

var xxx_messageInfo_EventDataCall proto.InternalMessageInfo

func (m *EventDataCall) GetCallData() *CallData {
	if m != nil {
		return m.CallData
	}
	return nil
}

func (m *EventDataCall) GetOrigin() []byte {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *EventDataCall) GetStackDepth() uint64 {
	if m != nil {
		return m.StackDepth
	}
	return 0
}

func (m *EventDataCall) GetReturn() []byte {
	if m != nil {
		return m.Return
	}
	return nil
}

func (m *EventDataCall) GetException() *errors.Exception {
	if m != nil {
		return m.Exception
	}
	return nil
}

type CallData struct {
	Caller               []byte   `protobuf:"bytes,1,opt,name=Caller,proto3" json:"Caller,omitempty"`
	Callee               []byte   `protobuf:"bytes,2,opt,name=Callee,proto3" json:"Callee,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	Value                uint64   `protobuf:"varint,4,opt,name=Value,proto3" json:"Value,omitempty"`
	Gas                  uint64   `protobuf:"varint,5,opt,name=Gas,proto3" json:"Gas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallData) Reset()         { *m = CallData{} }
func (m *CallData) String() string { return proto.CompactTextString(m) }
func (*CallData) ProtoMessage()    {}
func (*CallData) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_4b6532afacd9adee, []int{13}
}
func (m *CallData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallData.Unmarshal(m, b)
}
func (m *CallData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallData.Marshal(b, m, deterministic)
}
func (dst *CallData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallData.Merge(dst, src)
}
func (m *CallData) XXX_Size() int {
	return xxx_messageInfo_CallData.Size(m)
}
func (m *CallData) XXX_DiscardUnknown() {
	xxx_messageInfo_CallData.DiscardUnknown(m)
}

var xxx_messageInfo_CallData proto.InternalMessageInfo

func (m *CallData) GetCaller() []byte {
	if m != nil {
		return m.Caller
	}
	return nil
}

func (m *CallData) GetCallee() []byte {
	if m != nil {
		return m.Callee
	}
	return nil
}

func (m *CallData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CallData) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *CallData) GetGas() uint64 {
	if m != nil {
		return m.Gas
	}
	return 0
}

func init() {
	proto.RegisterType((*EventIdParam)(nil), "pbevents.EventIdParam")
	proto.RegisterType((*SubIdParam)(nil), "pbevents.SubIdParam")
	proto.RegisterType((*EventUnSub)(nil), "pbevents.EventUnSub")
	proto.RegisterType((*PollResponse)(nil), "pbevents.PollResponse")
	proto.RegisterType((*GetEventsRequest)(nil), "pbevents.GetEventsRequest")
	proto.RegisterType((*GetEventsResponse)(nil), "pbevents.GetEventsResponse")
	proto.RegisterType((*Bound)(nil), "pbevents.Bound")
	proto.RegisterType((*BlockRange)(nil), "pbevents.BlockRange")
	proto.RegisterType((*EventHeader)(nil), "pbevents.EventHeader")
	proto.RegisterType((*ExecutionEvent)(nil), "pbevents.ExecutionEvent")
	proto.RegisterType((*EventDataLog)(nil), "pbevents.EventDataLog")
	proto.RegisterType((*EventDataTx)(nil), "pbevents.EventDataTx")
	proto.RegisterType((*EventDataCall)(nil), "pbevents.EventDataCall")
	proto.RegisterType((*CallData)(nil), "pbevents.CallData")
	proto.RegisterEnum("pbevents.Bound_BoundType", Bound_BoundType_name, Bound_BoundType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventsClient is the client API for Events service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventsClient interface {
	EventPoll(ctx context.Context, in *SubIdParam, opts ...grpc.CallOption) (*PollResponse, error)
	EventSubscribe(ctx context.Context, in *EventIdParam, opts ...grpc.CallOption) (*SubIdParam, error)
	EventUnsubscribe(ctx context.Context, in *SubIdParam, opts ...grpc.CallOption) (*EventUnSub, error)
}

type eventsClient struct {
	cc *grpc.ClientConn
}

func NewEventsClient(cc *grpc.ClientConn) EventsClient {
	return &eventsClient{cc}
}

func (c *eventsClient) EventPoll(ctx context.Context, in *SubIdParam, opts ...grpc.CallOption) (*PollResponse, error) {
	out := new(PollResponse)
	err := c.cc.Invoke(ctx, "/pbevents.Events/EventPoll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventsClient) EventSubscribe(ctx context.Context, in *EventIdParam, opts ...grpc.CallOption) (*SubIdParam, error) {
	out := new(SubIdParam)
	err := c.cc.Invoke(ctx, "/pbevents.Events/EventSubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventsClient) EventUnsubscribe(ctx context.Context, in *SubIdParam, opts ...grpc.CallOption) (*EventUnSub, error) {
	out := new(EventUnSub)
	err := c.cc.Invoke(ctx, "/pbevents.Events/EventUnsubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventsServer is the server API for Events service.
type EventsServer interface {
	EventPoll(context.Context, *SubIdParam) (*PollResponse, error)
	EventSubscribe(context.Context, *EventIdParam) (*SubIdParam, error)
	EventUnsubscribe(context.Context, *SubIdParam) (*EventUnSub, error)
}

func RegisterEventsServer(s *grpc.Server, srv EventsServer) {
	s.RegisterService(&_Events_serviceDesc, srv)
}

func _Events_EventPoll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubIdParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventsServer).EventPoll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbevents.Events/EventPoll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventsServer).EventPoll(ctx, req.(*SubIdParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Events_EventSubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventIdParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventsServer).EventSubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbevents.Events/EventSubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventsServer).EventSubscribe(ctx, req.(*EventIdParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Events_EventUnsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubIdParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventsServer).EventUnsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbevents.Events/EventUnsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventsServer).EventUnsubscribe(ctx, req.(*SubIdParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _Events_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbevents.Events",
	HandlerType: (*EventsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EventPoll",
			Handler:    _Events_EventPoll_Handler,
		},
		{
			MethodName: "EventSubscribe",
			Handler:    _Events_EventSubscribe_Handler,
		},
		{
			MethodName: "EventUnsubscribe",
			Handler:    _Events_EventUnsubscribe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/hyperledger/burrow/execution/events/pbevents/events.proto",
}

// ExecutionEventsClient is the client API for ExecutionEvents service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExecutionEventsClient interface {
	GetEvents(ctx context.Context, in *GetEventsRequest, opts ...grpc.CallOption) (ExecutionEvents_GetEventsClient, error)
}

type executionEventsClient struct {
	cc *grpc.ClientConn
}

func NewExecutionEventsClient(cc *grpc.ClientConn) ExecutionEventsClient {
	return &executionEventsClient{cc}
}

func (c *executionEventsClient) GetEvents(ctx context.Context, in *GetEventsRequest, opts ...grpc.CallOption) (ExecutionEvents_GetEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ExecutionEvents_serviceDesc.Streams[0], "/pbevents.ExecutionEvents/GetEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &executionEventsGetEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ExecutionEvents_GetEventsClient interface {
	Recv() (*GetEventsResponse, error)
	grpc.ClientStream
}

type executionEventsGetEventsClient struct {
	grpc.ClientStream
}

func (x *executionEventsGetEventsClient) Recv() (*GetEventsResponse, error) {
	m := new(GetEventsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExecutionEventsServer is the server API for ExecutionEvents service.
type ExecutionEventsServer interface {
	GetEvents(*GetEventsRequest, ExecutionEvents_GetEventsServer) error
}

func RegisterExecutionEventsServer(s *grpc.Server, srv ExecutionEventsServer) {
	s.RegisterService(&_ExecutionEvents_serviceDesc, srv)
}

func _ExecutionEvents_GetEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetEventsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ExecutionEventsServer).GetEvents(m, &executionEventsGetEventsServer{stream})
}

type ExecutionEvents_GetEventsServer interface {
	Send(*GetEventsResponse) error
	grpc.ServerStream
}

type executionEventsGetEventsServer struct {
	grpc.ServerStream
}

func (x *executionEventsGetEventsServer) Send(m *GetEventsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ExecutionEvents_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbevents.ExecutionEvents",
	HandlerType: (*ExecutionEventsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetEvents",
			Handler:       _ExecutionEvents_GetEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/hyperledger/burrow/execution/events/pbevents/events.proto",
}

func init() {
	proto.RegisterFile("github.com/hyperledger/burrow/execution/events/pbevents/events.proto", fileDescriptor_events_4b6532afacd9adee)
}

var fileDescriptor_events_4b6532afacd9adee = []byte{
	// 843 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xdd, 0xae, 0xdb, 0x44,
	0x10, 0x8e, 0x8f, 0x93, 0x90, 0x4c, 0xd2, 0xd3, 0x74, 0x15, 0x8a, 0x09, 0x08, 0x05, 0x0b, 0xa4,
	0xdc, 0x34, 0xa9, 0x02, 0x12, 0x3a, 0x02, 0xb5, 0x24, 0xc4, 0x34, 0x47, 0x0a, 0x6a, 0x59, 0xbb,
	0x91, 0xe0, 0xce, 0x3f, 0xab, 0xc4, 0xaa, 0x6b, 0x9b, 0x5d, 0xbb, 0xe4, 0x20, 0xae, 0xb9, 0xe3,
	0x29, 0x78, 0x11, 0x24, 0x5e, 0x0c, 0xed, 0x8f, 0xff, 0xa2, 0x54, 0xaa, 0x7a, 0x13, 0xef, 0x37,
	0xf3, 0xed, 0x64, 0xe6, 0x9b, 0xd9, 0x5d, 0xd8, 0x1c, 0xc2, 0xec, 0x98, 0x7b, 0x73, 0x3f, 0x79,
	0xbd, 0x38, 0xde, 0xa5, 0x84, 0x46, 0x24, 0x38, 0x10, 0xba, 0xf0, 0x72, 0x4a, 0x93, 0xdf, 0x17,
	0xe4, 0x44, 0xfc, 0x3c, 0x0b, 0x93, 0x78, 0x41, 0xde, 0x90, 0x38, 0x63, 0x8b, 0xd4, 0x53, 0x0b,
	0xf9, 0x99, 0xa7, 0x34, 0xc9, 0x12, 0xd4, 0x2b, 0xcc, 0x93, 0x6f, 0xdf, 0x39, 0x1e, 0xa5, 0x09,
	0x65, 0xea, 0x23, 0xc3, 0x98, 0x33, 0x18, 0x5a, 0x3c, 0xcc, 0x6d, 0xf0, 0xc2, 0xa5, 0xee, 0x6b,
	0x64, 0xc0, 0x07, 0x44, 0x62, 0x43, 0x9b, 0x6a, 0xb3, 0x3e, 0x2e, 0xa0, 0x69, 0x02, 0xd8, 0xb9,
	0x57, 0xf0, 0xc6, 0xd0, 0x61, 0x1c, 0x29, 0x96, 0x04, 0xe6, 0x17, 0x00, 0x22, 0xda, 0xcb, 0xd8,
	0xce, 0x3d, 0xf4, 0x10, 0xba, 0x94, 0xb0, 0x3c, 0xca, 0x04, 0xa9, 0x87, 0x15, 0x32, 0xbf, 0x87,
	0xe1, 0x8b, 0x24, 0x8a, 0x30, 0x61, 0x69, 0x12, 0x33, 0x82, 0x1e, 0x43, 0x57, 0x96, 0x62, 0x68,
	0x53, 0x7d, 0x36, 0x58, 0x1a, 0xf3, 0xa2, 0xb6, 0xb9, 0x55, 0x24, 0x2f, 0xc2, 0x62, 0xc5, 0x33,
	0xff, 0x84, 0xd1, 0x33, 0x92, 0x09, 0x1b, 0xc3, 0xe4, 0xb7, 0x9c, 0xb0, 0x0c, 0x7d, 0x0d, 0xb0,
	0x8e, 0x12, 0xff, 0x15, 0x76, 0xe3, 0x03, 0x11, 0xff, 0x38, 0x58, 0x8e, 0xab, 0x48, 0x95, 0x0f,
	0xd7, 0x78, 0xe8, 0x53, 0xe8, 0xaf, 0xdd, 0xcc, 0x3f, 0xda, 0xe1, 0x1f, 0xc4, 0xb8, 0x9a, 0x6a,
	0xb3, 0x7b, 0xb8, 0x32, 0xf0, 0x2a, 0x7f, 0xce, 0x09, 0xbd, 0x33, 0x74, 0x59, 0xa5, 0x00, 0xa6,
	0x05, 0x0f, 0x6a, 0xff, 0xfe, 0xde, 0x45, 0xfc, 0xad, 0x41, 0x67, 0x9d, 0xe4, 0x71, 0x80, 0x1e,
	0x41, 0xdb, 0xb9, 0x4b, 0x65, 0xd2, 0xd7, 0xcb, 0x8f, 0x6b, 0x49, 0x73, 0xb7, 0xfc, 0xe5, 0x04,
	0x2c, 0x68, 0x3c, 0xab, 0xdb, 0x38, 0x20, 0x27, 0x91, 0x6f, 0x1b, 0x4b, 0x60, 0x3e, 0x85, 0x7e,
	0x49, 0x44, 0x43, 0xe8, 0xad, 0xd6, 0xf6, 0xf3, 0xdd, 0x4b, 0xc7, 0x1a, 0xb5, 0x38, 0xc2, 0xd6,
	0x6e, 0xe5, 0xdc, 0xee, 0xad, 0x91, 0x86, 0x00, 0xba, 0xbb, 0x95, 0x63, 0xd9, 0xce, 0xe8, 0x8a,
	0xaf, 0x6d, 0x07, 0x5b, 0xab, 0x9f, 0x46, 0xba, 0xb9, 0xaf, 0x0b, 0x88, 0xbe, 0x84, 0x8e, 0x9d,
	0xb9, 0x34, 0x53, 0x4a, 0xde, 0x3f, 0x4b, 0x0a, 0x4b, 0x2f, 0xfa, 0x1c, 0x74, 0x2b, 0x0e, 0x44,
	0x26, 0x17, 0x48, 0xdc, 0x67, 0xfe, 0xa3, 0xc1, 0x40, 0x54, 0xbe, 0x25, 0x6e, 0x40, 0x28, 0x1f,
	0x0b, 0xe7, 0x54, 0xd6, 0xdb, 0xc7, 0x0a, 0x49, 0xfb, 0xd6, 0x65, 0x47, 0x11, 0x6d, 0x88, 0x15,
	0xe2, 0x2d, 0x12, 0xdb, 0xc5, 0x16, 0xd9, 0x88, 0xca, 0xc0, 0x07, 0x56, 0x0e, 0xf0, 0xc6, 0x68,
	0xcb, 0x81, 0x55, 0x90, 0xc7, 0xdb, 0x92, 0xf0, 0x70, 0xcc, 0x8c, 0x8e, 0xd0, 0x49, 0xa1, 0x4a,
	0xbe, 0x6e, 0x5d, 0xbe, 0xbf, 0xae, 0xe0, 0xba, 0xd9, 0x28, 0xf4, 0x88, 0x07, 0xe0, 0x29, 0x2b,
	0x0d, 0x3e, 0xac, 0xb5, 0xb4, 0xaa, 0x07, 0x2b, 0x12, 0xba, 0x51, 0x65, 0x6e, 0xdc, 0xcc, 0x75,
	0x4e, 0x4a, 0x92, 0xf3, 0x3d, 0xd2, 0xb9, 0x6d, 0xe1, 0x3a, 0x17, 0x3d, 0x85, 0x7b, 0x25, 0xfc,
	0xc1, 0x8d, 0x22, 0x51, 0xe6, 0x60, 0xf9, 0xd1, 0x85, 0xcd, 0xdc, 0xbd, 0x6d, 0xe1, 0x26, 0x1f,
	0x7d, 0xa7, 0x8e, 0x31, 0x37, 0xec, 0x92, 0x83, 0x90, 0x62, 0xb0, 0x7c, 0x78, 0x61, 0xff, 0x2e,
	0x39, 0x6c, 0x5b, 0xb8, 0xc1, 0x5e, 0x0f, 0x94, 0xc2, 0x1c, 0x9b, 0x4e, 0x33, 0x14, 0x17, 0x78,
	0x15, 0x04, 0x94, 0x30, 0x26, 0x64, 0x18, 0xe2, 0x02, 0x22, 0x04, 0x6d, 0x4e, 0x52, 0xed, 0x12,
	0x6b, 0xd1, 0xc4, 0x24, 0x0d, 0x7d, 0x66, 0xe8, 0x53, 0x5d, 0x34, 0x51, 0x20, 0x73, 0xdf, 0x10,
	0x87, 0xd3, 0x30, 0xc9, 0x72, 0x1a, 0xab, 0x98, 0x0a, 0xa1, 0x05, 0xf4, 0xad, 0x93, 0x4f, 0x52,
	0xde, 0x04, 0xa5, 0xe0, 0x83, 0xb9, 0xba, 0xb0, 0x4a, 0x07, 0xae, 0x38, 0xe6, 0xbf, 0xda, 0x99,
	0x74, 0x68, 0x0e, 0x3d, 0xfe, 0x15, 0x99, 0xc9, 0xbe, 0xa1, 0x4a, 0x86, 0xc2, 0x83, 0x4b, 0x0e,
	0x4f, 0xe5, 0x39, 0x0d, 0x0f, 0x61, 0x5c, 0x8c, 0x9d, 0x44, 0xe8, 0x33, 0x00, 0x3b, 0x73, 0xfd,
	0x57, 0x1b, 0x92, 0x66, 0x47, 0xd1, 0x90, 0x36, 0xae, 0x59, 0x6a, 0x25, 0xb4, 0xdf, 0x5e, 0x42,
	0xe7, 0x1d, 0x4a, 0x78, 0x03, 0x8d, 0x64, 0xf8, 0x5a, 0x8d, 0xdc, 0x10, 0x2b, 0x54, 0xda, 0x49,
	0x91, 0xa4, 0x44, 0x65, 0x0b, 0xf4, 0x5a, 0x0b, 0xc6, 0xd0, 0xd9, 0xbb, 0x51, 0x4e, 0x44, 0x5e,
	0x6d, 0x2c, 0x01, 0x1a, 0x81, 0xfe, 0xcc, 0x65, 0xea, 0x28, 0xf0, 0xe5, 0xf2, 0x3f, 0x0d, 0xba,
	0xf2, 0x12, 0x43, 0x37, 0x6a, 0x00, 0xf8, 0xb5, 0x8c, 0x6a, 0x97, 0x66, 0x75, 0xe1, 0x4f, 0x6a,
	0xb3, 0xd4, 0xb8, 0xbc, 0x9f, 0xc0, 0xb5, 0xd8, 0x6a, 0xe7, 0x1e, 0xf3, 0x69, 0xe8, 0x11, 0x74,
	0x3e, 0x75, 0x45, 0x84, 0x8b, 0x71, 0xd1, 0x13, 0x18, 0xa9, 0x27, 0x83, 0x95, 0x11, 0x2e, 0x67,
	0x30, 0x3e, 0x8b, 0x2b, 0x1e, 0x99, 0xe5, 0x2f, 0x70, 0xbf, 0x79, 0x6c, 0x19, 0xfa, 0x11, 0xfa,
	0xe5, 0xfd, 0x8c, 0x26, 0xd5, 0xae, 0xf3, 0x27, 0x63, 0xf2, 0xc9, 0x45, 0x9f, 0x2c, 0xec, 0xb1,
	0xb6, 0xbe, 0xf9, 0xf5, 0x9b, 0xf7, 0x7c, 0xaa, 0xbd, 0xae, 0x78, 0x5d, 0xbf, 0xfa, 0x3f, 0x00,
	0x00, 0xff, 0xff, 0x64, 0x13, 0x5b, 0x2c, 0xec, 0x07, 0x00, 0x00,
}
