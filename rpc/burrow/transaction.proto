syntax = 'proto3';

option go_package = "burrow";

import "common.proto";

// Transaction Service Definition
service Transaction {
    rpc BroadcastTx (TxParam) returns (TxReceipt);
    rpc Call (CallParam) returns (CallResult);
    rpc CallCode (CallCodeParam) returns (CallResult);
    rpc Transact (TransactParam) returns (TxReceipt);
    rpc TransactAndHold (TransactParam) returns (EventDataCall);
    rpc Send (SendParam) returns (TxReceipt);
    rpc SendAndHold (SendParam) returns (TxReceipt);
    rpc SignTx (SignTxParam) returns (SignedTx);
}

// Params
message CallParam {
    bytes from = 1;
    bytes address = 2;
    bytes data = 3;
}

message CallCodeParam {
    bytes from = 1;
    bytes code = 2;
    bytes data = 3;
}

message TransactParam {
    InputAccount inputAccount = 1;
    bytes address = 2;
    bytes data = 3;
    uint64 gasLimit = 4;
    uint64 fee = 5;
}

message SendParam {
    InputAccount inputAccount = 1;
    bytes toAddress = 2;
    uint64 amount = 3;
}

message TxParam {
    bytes tx = 1;
}

message SignTxParam {
    bytes tx = 1;
    repeated PrivateAccount privateAccounts = 2;
}

// Results
message SignedTx {
    bytes tx = 1;
}

message CallResult {
    bytes Return = 1;
    uint64 GasUsed = 2;
}

//--------------------------------------------------