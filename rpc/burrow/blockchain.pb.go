// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blockchain.proto

package burrow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Params
type HeightParam struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeightParam) Reset()         { *m = HeightParam{} }
func (m *HeightParam) String() string { return proto.CompactTextString(m) }
func (*HeightParam) ProtoMessage()    {}
func (*HeightParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{0}
}
func (m *HeightParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeightParam.Unmarshal(m, b)
}
func (m *HeightParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeightParam.Marshal(b, m, deterministic)
}
func (dst *HeightParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeightParam.Merge(dst, src)
}
func (m *HeightParam) XXX_Size() int {
	return xxx_messageInfo_HeightParam.Size(m)
}
func (m *HeightParam) XXX_DiscardUnknown() {
	xxx_messageInfo_HeightParam.DiscardUnknown(m)
}

var xxx_messageInfo_HeightParam proto.InternalMessageInfo

func (m *HeightParam) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type BlocksParam struct {
	MinHeight            uint64   `protobuf:"varint,1,opt,name=minHeight,proto3" json:"minHeight,omitempty"`
	MaxHeight            uint64   `protobuf:"varint,2,opt,name=maxHeight,proto3" json:"maxHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlocksParam) Reset()         { *m = BlocksParam{} }
func (m *BlocksParam) String() string { return proto.CompactTextString(m) }
func (*BlocksParam) ProtoMessage()    {}
func (*BlocksParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{1}
}
func (m *BlocksParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlocksParam.Unmarshal(m, b)
}
func (m *BlocksParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlocksParam.Marshal(b, m, deterministic)
}
func (dst *BlocksParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlocksParam.Merge(dst, src)
}
func (m *BlocksParam) XXX_Size() int {
	return xxx_messageInfo_BlocksParam.Size(m)
}
func (m *BlocksParam) XXX_DiscardUnknown() {
	xxx_messageInfo_BlocksParam.DiscardUnknown(m)
}

var xxx_messageInfo_BlocksParam proto.InternalMessageInfo

func (m *BlocksParam) GetMinHeight() uint64 {
	if m != nil {
		return m.MinHeight
	}
	return 0
}

func (m *BlocksParam) GetMaxHeight() uint64 {
	if m != nil {
		return m.MaxHeight
	}
	return 0
}

// Results
type Header struct {
	ChainID              string   `protobuf:"bytes,1,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	Height               int64    `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
	Time                 int64    `protobuf:"varint,3,opt,name=Time,proto3" json:"Time,omitempty"`
	NumTxs               int64    `protobuf:"varint,4,opt,name=NumTxs,proto3" json:"NumTxs,omitempty"`
	LastBlockID          []byte   `protobuf:"bytes,5,opt,name=LastBlockID,proto3" json:"LastBlockID,omitempty"`
	LastCommitHash       []byte   `protobuf:"bytes,6,opt,name=LastCommitHash,proto3" json:"LastCommitHash,omitempty"`
	DataHash             []byte   `protobuf:"bytes,7,opt,name=DataHash,proto3" json:"DataHash,omitempty"`
	ValidatorsHash       []byte   `protobuf:"bytes,8,opt,name=ValidatorsHash,proto3" json:"ValidatorsHash,omitempty"`
	AppHash              []byte   `protobuf:"bytes,9,opt,name=AppHash,proto3" json:"AppHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{2}
}
func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (dst *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(dst, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *Header) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Header) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Header) GetNumTxs() int64 {
	if m != nil {
		return m.NumTxs
	}
	return 0
}

func (m *Header) GetLastBlockID() []byte {
	if m != nil {
		return m.LastBlockID
	}
	return nil
}

func (m *Header) GetLastCommitHash() []byte {
	if m != nil {
		return m.LastCommitHash
	}
	return nil
}

func (m *Header) GetDataHash() []byte {
	if m != nil {
		return m.DataHash
	}
	return nil
}

func (m *Header) GetValidatorsHash() []byte {
	if m != nil {
		return m.ValidatorsHash
	}
	return nil
}

func (m *Header) GetAppHash() []byte {
	if m != nil {
		return m.AppHash
	}
	return nil
}

type Data struct {
	Txs                  [][]byte `protobuf:"bytes,1,rep,name=Txs,proto3" json:"Txs,omitempty"`
	Hash                 []byte   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{3}
}
func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (dst *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(dst, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetTxs() [][]byte {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (m *Data) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type Block struct {
	BlockID              []byte   `protobuf:"bytes,1,opt,name=BlockID,proto3" json:"BlockID,omitempty"`
	Header               *Header  `protobuf:"bytes,2,opt,name=Header,proto3" json:"Header,omitempty"`
	Data                 *Data    `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{4}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetBlockID() []byte {
	if m != nil {
		return m.BlockID
	}
	return nil
}

func (m *Block) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type BlockMeta struct {
	BlockID              []byte   `protobuf:"bytes,1,opt,name=BlockID,proto3" json:"BlockID,omitempty"`
	Header               *Header  `protobuf:"bytes,2,opt,name=Header,proto3" json:"Header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockMeta) Reset()         { *m = BlockMeta{} }
func (m *BlockMeta) String() string { return proto.CompactTextString(m) }
func (*BlockMeta) ProtoMessage()    {}
func (*BlockMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{5}
}
func (m *BlockMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockMeta.Unmarshal(m, b)
}
func (m *BlockMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockMeta.Marshal(b, m, deterministic)
}
func (dst *BlockMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockMeta.Merge(dst, src)
}
func (m *BlockMeta) XXX_Size() int {
	return xxx_messageInfo_BlockMeta.Size(m)
}
func (m *BlockMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockMeta.DiscardUnknown(m)
}

var xxx_messageInfo_BlockMeta proto.InternalMessageInfo

func (m *BlockMeta) GetBlockID() []byte {
	if m != nil {
		return m.BlockID
	}
	return nil
}

func (m *BlockMeta) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type BlockList struct {
	LastHeight           uint64       `protobuf:"varint,1,opt,name=LastHeight,proto3" json:"LastHeight,omitempty"`
	BlockMetas           []*BlockMeta `protobuf:"bytes,2,rep,name=BlockMetas,proto3" json:"BlockMetas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BlockList) Reset()         { *m = BlockList{} }
func (m *BlockList) String() string { return proto.CompactTextString(m) }
func (*BlockList) ProtoMessage()    {}
func (*BlockList) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{6}
}
func (m *BlockList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockList.Unmarshal(m, b)
}
func (m *BlockList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockList.Marshal(b, m, deterministic)
}
func (dst *BlockList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockList.Merge(dst, src)
}
func (m *BlockList) XXX_Size() int {
	return xxx_messageInfo_BlockList.Size(m)
}
func (m *BlockList) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockList.DiscardUnknown(m)
}

var xxx_messageInfo_BlockList proto.InternalMessageInfo

func (m *BlockList) GetLastHeight() uint64 {
	if m != nil {
		return m.LastHeight
	}
	return 0
}

func (m *BlockList) GetBlockMetas() []*BlockMeta {
	if m != nil {
		return m.BlockMetas
	}
	return nil
}

type ChainId struct {
	ChainName            string   `protobuf:"bytes,1,opt,name=ChainName,proto3" json:"ChainName,omitempty"`
	ChainId              string   `protobuf:"bytes,2,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	GenesisHash          []byte   `protobuf:"bytes,3,opt,name=GenesisHash,proto3" json:"GenesisHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChainId) Reset()         { *m = ChainId{} }
func (m *ChainId) String() string { return proto.CompactTextString(m) }
func (*ChainId) ProtoMessage()    {}
func (*ChainId) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{7}
}
func (m *ChainId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainId.Unmarshal(m, b)
}
func (m *ChainId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainId.Marshal(b, m, deterministic)
}
func (dst *ChainId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainId.Merge(dst, src)
}
func (m *ChainId) XXX_Size() int {
	return xxx_messageInfo_ChainId.Size(m)
}
func (m *ChainId) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainId.DiscardUnknown(m)
}

var xxx_messageInfo_ChainId proto.InternalMessageInfo

func (m *ChainId) GetChainName() string {
	if m != nil {
		return m.ChainName
	}
	return ""
}

func (m *ChainId) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *ChainId) GetGenesisHash() []byte {
	if m != nil {
		return m.GenesisHash
	}
	return nil
}

type GenesisDoc struct {
	GenesisTime          uint64                         `protobuf:"varint,1,opt,name=GenesisTime,proto3" json:"GenesisTime,omitempty"`
	ChainName            string                         `protobuf:"bytes,2,opt,name=ChainName,proto3" json:"ChainName,omitempty"`
	Salt                 []byte                         `protobuf:"bytes,3,opt,name=Salt,proto3" json:"Salt,omitempty"`
	GlobalPermissions    uint64                         `protobuf:"varint,4,opt,name=GlobalPermissions,proto3" json:"GlobalPermissions,omitempty"`
	Accounts             []*GenesisDoc_GenesisAccount   `protobuf:"bytes,5,rep,name=Accounts,proto3" json:"Accounts,omitempty"`
	Validators           []*GenesisDoc_GenesisValidator `protobuf:"bytes,6,rep,name=Validators,proto3" json:"Validators,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *GenesisDoc) Reset()         { *m = GenesisDoc{} }
func (m *GenesisDoc) String() string { return proto.CompactTextString(m) }
func (*GenesisDoc) ProtoMessage()    {}
func (*GenesisDoc) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{8}
}
func (m *GenesisDoc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisDoc.Unmarshal(m, b)
}
func (m *GenesisDoc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisDoc.Marshal(b, m, deterministic)
}
func (dst *GenesisDoc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisDoc.Merge(dst, src)
}
func (m *GenesisDoc) XXX_Size() int {
	return xxx_messageInfo_GenesisDoc.Size(m)
}
func (m *GenesisDoc) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisDoc.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisDoc proto.InternalMessageInfo

func (m *GenesisDoc) GetGenesisTime() uint64 {
	if m != nil {
		return m.GenesisTime
	}
	return 0
}

func (m *GenesisDoc) GetChainName() string {
	if m != nil {
		return m.ChainName
	}
	return ""
}

func (m *GenesisDoc) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *GenesisDoc) GetGlobalPermissions() uint64 {
	if m != nil {
		return m.GlobalPermissions
	}
	return 0
}

func (m *GenesisDoc) GetAccounts() []*GenesisDoc_GenesisAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *GenesisDoc) GetValidators() []*GenesisDoc_GenesisValidator {
	if m != nil {
		return m.Validators
	}
	return nil
}

type GenesisDoc_GenesisAccount struct {
	Address              []byte              `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	PublicKey            []byte              `protobuf:"bytes,2,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Amount               uint64              `protobuf:"varint,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Name                 string              `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Permissions          *AccountPermissions `protobuf:"bytes,5,opt,name=Permissions,proto3" json:"Permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GenesisDoc_GenesisAccount) Reset()         { *m = GenesisDoc_GenesisAccount{} }
func (m *GenesisDoc_GenesisAccount) String() string { return proto.CompactTextString(m) }
func (*GenesisDoc_GenesisAccount) ProtoMessage()    {}
func (*GenesisDoc_GenesisAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{8, 0}
}
func (m *GenesisDoc_GenesisAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisDoc_GenesisAccount.Unmarshal(m, b)
}
func (m *GenesisDoc_GenesisAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisDoc_GenesisAccount.Marshal(b, m, deterministic)
}
func (dst *GenesisDoc_GenesisAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisDoc_GenesisAccount.Merge(dst, src)
}
func (m *GenesisDoc_GenesisAccount) XXX_Size() int {
	return xxx_messageInfo_GenesisDoc_GenesisAccount.Size(m)
}
func (m *GenesisDoc_GenesisAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisDoc_GenesisAccount.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisDoc_GenesisAccount proto.InternalMessageInfo

func (m *GenesisDoc_GenesisAccount) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *GenesisDoc_GenesisAccount) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *GenesisDoc_GenesisAccount) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *GenesisDoc_GenesisAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GenesisDoc_GenesisAccount) GetPermissions() *AccountPermissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type GenesisDoc_GenesisValidator struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,2,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Amount               uint64   `protobuf:"varint,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	UnbondTo             [][]byte `protobuf:"bytes,5,rep,name=UnbondTo,proto3" json:"UnbondTo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenesisDoc_GenesisValidator) Reset()         { *m = GenesisDoc_GenesisValidator{} }
func (m *GenesisDoc_GenesisValidator) String() string { return proto.CompactTextString(m) }
func (*GenesisDoc_GenesisValidator) ProtoMessage()    {}
func (*GenesisDoc_GenesisValidator) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{8, 1}
}
func (m *GenesisDoc_GenesisValidator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisDoc_GenesisValidator.Unmarshal(m, b)
}
func (m *GenesisDoc_GenesisValidator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisDoc_GenesisValidator.Marshal(b, m, deterministic)
}
func (dst *GenesisDoc_GenesisValidator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisDoc_GenesisValidator.Merge(dst, src)
}
func (m *GenesisDoc_GenesisValidator) XXX_Size() int {
	return xxx_messageInfo_GenesisDoc_GenesisValidator.Size(m)
}
func (m *GenesisDoc_GenesisValidator) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisDoc_GenesisValidator.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisDoc_GenesisValidator proto.InternalMessageInfo

func (m *GenesisDoc_GenesisValidator) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *GenesisDoc_GenesisValidator) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *GenesisDoc_GenesisValidator) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *GenesisDoc_GenesisValidator) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GenesisDoc_GenesisValidator) GetUnbondTo() [][]byte {
	if m != nil {
		return m.UnbondTo
	}
	return nil
}

type UnconfirmedTxList struct {
	NumTxs               uint64   `protobuf:"varint,1,opt,name=NumTxs,proto3" json:"NumTxs,omitempty"`
	Txs                  [][]byte `protobuf:"bytes,2,rep,name=Txs,proto3" json:"Txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnconfirmedTxList) Reset()         { *m = UnconfirmedTxList{} }
func (m *UnconfirmedTxList) String() string { return proto.CompactTextString(m) }
func (*UnconfirmedTxList) ProtoMessage()    {}
func (*UnconfirmedTxList) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{9}
}
func (m *UnconfirmedTxList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnconfirmedTxList.Unmarshal(m, b)
}
func (m *UnconfirmedTxList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnconfirmedTxList.Marshal(b, m, deterministic)
}
func (dst *UnconfirmedTxList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnconfirmedTxList.Merge(dst, src)
}
func (m *UnconfirmedTxList) XXX_Size() int {
	return xxx_messageInfo_UnconfirmedTxList.Size(m)
}
func (m *UnconfirmedTxList) XXX_DiscardUnknown() {
	xxx_messageInfo_UnconfirmedTxList.DiscardUnknown(m)
}

var xxx_messageInfo_UnconfirmedTxList proto.InternalMessageInfo

func (m *UnconfirmedTxList) GetNumTxs() uint64 {
	if m != nil {
		return m.NumTxs
	}
	return 0
}

func (m *UnconfirmedTxList) GetTxs() [][]byte {
	if m != nil {
		return m.Txs
	}
	return nil
}

type Status struct {
	NodeInfo             *NodeInfo `protobuf:"bytes,1,opt,name=NodeInfo,proto3" json:"NodeInfo,omitempty"`
	GenesisHash          []byte    `protobuf:"bytes,2,opt,name=GenesisHash,proto3" json:"GenesisHash,omitempty"`
	PublicKey            []byte    `protobuf:"bytes,3,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	LatestBlockHash      []byte    `protobuf:"bytes,4,opt,name=LatestBlockHash,proto3" json:"LatestBlockHash,omitempty"`
	LatestBlockHeight    uint64    `protobuf:"varint,5,opt,name=LatestBlockHeight,proto3" json:"LatestBlockHeight,omitempty"`
	LatestBlockTime      int64     `protobuf:"varint,6,opt,name=LatestBlockTime,proto3" json:"LatestBlockTime,omitempty"`
	NodeVersion          string    `protobuf:"bytes,7,opt,name=NodeVersion,proto3" json:"NodeVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{10}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (dst *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(dst, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetNodeInfo() *NodeInfo {
	if m != nil {
		return m.NodeInfo
	}
	return nil
}

func (m *Status) GetGenesisHash() []byte {
	if m != nil {
		return m.GenesisHash
	}
	return nil
}

func (m *Status) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *Status) GetLatestBlockHash() []byte {
	if m != nil {
		return m.LatestBlockHash
	}
	return nil
}

func (m *Status) GetLatestBlockHeight() uint64 {
	if m != nil {
		return m.LatestBlockHeight
	}
	return 0
}

func (m *Status) GetLatestBlockTime() int64 {
	if m != nil {
		return m.LatestBlockTime
	}
	return 0
}

func (m *Status) GetNodeVersion() string {
	if m != nil {
		return m.NodeVersion
	}
	return ""
}

// These are used for get consensus state. There is a lot of information that could be included
// We should decided what the minimum we want inccluded is.
type RoundState struct {
	Height               int64    `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=Round,proto3" json:"Round,omitempty"`
	Step                 int64    `protobuf:"varint,3,opt,name=Step,proto3" json:"Step,omitempty"`
	StartTime            uint64   `protobuf:"varint,4,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	CommitTime           uint64   `protobuf:"varint,5,opt,name=CommitTime,proto3" json:"CommitTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoundState) Reset()         { *m = RoundState{} }
func (m *RoundState) String() string { return proto.CompactTextString(m) }
func (*RoundState) ProtoMessage()    {}
func (*RoundState) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{11}
}
func (m *RoundState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundState.Unmarshal(m, b)
}
func (m *RoundState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundState.Marshal(b, m, deterministic)
}
func (dst *RoundState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundState.Merge(dst, src)
}
func (m *RoundState) XXX_Size() int {
	return xxx_messageInfo_RoundState.Size(m)
}
func (m *RoundState) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundState.DiscardUnknown(m)
}

var xxx_messageInfo_RoundState proto.InternalMessageInfo

func (m *RoundState) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *RoundState) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *RoundState) GetStep() int64 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *RoundState) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *RoundState) GetCommitTime() uint64 {
	if m != nil {
		return m.CommitTime
	}
	return 0
}

type PeerRoundState struct {
	Height               int64    `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=Round,proto3" json:"Round,omitempty"`
	Step                 int64    `protobuf:"varint,3,opt,name=Step,proto3" json:"Step,omitempty"`
	StartTime            uint64   `protobuf:"varint,4,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Proposal             bool     `protobuf:"varint,5,opt,name=Proposal,proto3" json:"Proposal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerRoundState) Reset()         { *m = PeerRoundState{} }
func (m *PeerRoundState) String() string { return proto.CompactTextString(m) }
func (*PeerRoundState) ProtoMessage()    {}
func (*PeerRoundState) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{12}
}
func (m *PeerRoundState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerRoundState.Unmarshal(m, b)
}
func (m *PeerRoundState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerRoundState.Marshal(b, m, deterministic)
}
func (dst *PeerRoundState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerRoundState.Merge(dst, src)
}
func (m *PeerRoundState) XXX_Size() int {
	return xxx_messageInfo_PeerRoundState.Size(m)
}
func (m *PeerRoundState) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerRoundState.DiscardUnknown(m)
}

var xxx_messageInfo_PeerRoundState proto.InternalMessageInfo

func (m *PeerRoundState) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *PeerRoundState) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *PeerRoundState) GetStep() int64 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *PeerRoundState) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *PeerRoundState) GetProposal() bool {
	if m != nil {
		return m.Proposal
	}
	return false
}

type ConsensusState struct {
	RoundState           *RoundState       `protobuf:"bytes,1,opt,name=RoundState,proto3" json:"RoundState,omitempty"`
	PeerRoundStates      []*PeerRoundState `protobuf:"bytes,2,rep,name=PeerRoundStates,proto3" json:"PeerRoundStates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConsensusState) Reset()         { *m = ConsensusState{} }
func (m *ConsensusState) String() string { return proto.CompactTextString(m) }
func (*ConsensusState) ProtoMessage()    {}
func (*ConsensusState) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_7e3899cdd33a3484, []int{13}
}
func (m *ConsensusState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusState.Unmarshal(m, b)
}
func (m *ConsensusState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusState.Marshal(b, m, deterministic)
}
func (dst *ConsensusState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusState.Merge(dst, src)
}
func (m *ConsensusState) XXX_Size() int {
	return xxx_messageInfo_ConsensusState.Size(m)
}
func (m *ConsensusState) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusState.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusState proto.InternalMessageInfo

func (m *ConsensusState) GetRoundState() *RoundState {
	if m != nil {
		return m.RoundState
	}
	return nil
}

func (m *ConsensusState) GetPeerRoundStates() []*PeerRoundState {
	if m != nil {
		return m.PeerRoundStates
	}
	return nil
}

func init() {
	proto.RegisterType((*HeightParam)(nil), "HeightParam")
	proto.RegisterType((*BlocksParam)(nil), "BlocksParam")
	proto.RegisterType((*Header)(nil), "Header")
	proto.RegisterType((*Data)(nil), "Data")
	proto.RegisterType((*Block)(nil), "Block")
	proto.RegisterType((*BlockMeta)(nil), "BlockMeta")
	proto.RegisterType((*BlockList)(nil), "BlockList")
	proto.RegisterType((*ChainId)(nil), "ChainId")
	proto.RegisterType((*GenesisDoc)(nil), "GenesisDoc")
	proto.RegisterType((*GenesisDoc_GenesisAccount)(nil), "GenesisDoc.GenesisAccount")
	proto.RegisterType((*GenesisDoc_GenesisValidator)(nil), "GenesisDoc.GenesisValidator")
	proto.RegisterType((*UnconfirmedTxList)(nil), "UnconfirmedTxList")
	proto.RegisterType((*Status)(nil), "Status")
	proto.RegisterType((*RoundState)(nil), "RoundState")
	proto.RegisterType((*PeerRoundState)(nil), "PeerRoundState")
	proto.RegisterType((*ConsensusState)(nil), "ConsensusState")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockchainClient is the client API for Blockchain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockchainClient interface {
	GetBlock(ctx context.Context, in *HeightParam, opts ...grpc.CallOption) (*Block, error)
	GetBlocks(ctx context.Context, in *BlocksParam, opts ...grpc.CallOption) (*BlockList, error)
	GetBlockchainInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Status, error)
	GetChainId(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ChainId, error)
	GetGenesis(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GenesisDoc, error)
	GetLatestBlock(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Block, error)
	GetUnconfirmedTxs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UnconfirmedTxList, error)
	GetConsensusState(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ConsensusState, error)
}

type blockchainClient struct {
	cc *grpc.ClientConn
}

func NewBlockchainClient(cc *grpc.ClientConn) BlockchainClient {
	return &blockchainClient{cc}
}

func (c *blockchainClient) GetBlock(ctx context.Context, in *HeightParam, opts ...grpc.CallOption) (*Block, error) {
	out := new(Block)
	err := c.cc.Invoke(ctx, "/Blockchain/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainClient) GetBlocks(ctx context.Context, in *BlocksParam, opts ...grpc.CallOption) (*BlockList, error) {
	out := new(BlockList)
	err := c.cc.Invoke(ctx, "/Blockchain/GetBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainClient) GetBlockchainInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/Blockchain/GetBlockchainInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainClient) GetChainId(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ChainId, error) {
	out := new(ChainId)
	err := c.cc.Invoke(ctx, "/Blockchain/GetChainId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainClient) GetGenesis(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GenesisDoc, error) {
	out := new(GenesisDoc)
	err := c.cc.Invoke(ctx, "/Blockchain/GetGenesis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainClient) GetLatestBlock(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Block, error) {
	out := new(Block)
	err := c.cc.Invoke(ctx, "/Blockchain/GetLatestBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainClient) GetUnconfirmedTxs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UnconfirmedTxList, error) {
	out := new(UnconfirmedTxList)
	err := c.cc.Invoke(ctx, "/Blockchain/GetUnconfirmedTxs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainClient) GetConsensusState(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ConsensusState, error) {
	out := new(ConsensusState)
	err := c.cc.Invoke(ctx, "/Blockchain/GetConsensusState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockchainServer is the server API for Blockchain service.
type BlockchainServer interface {
	GetBlock(context.Context, *HeightParam) (*Block, error)
	GetBlocks(context.Context, *BlocksParam) (*BlockList, error)
	GetBlockchainInfo(context.Context, *Empty) (*Status, error)
	GetChainId(context.Context, *Empty) (*ChainId, error)
	GetGenesis(context.Context, *Empty) (*GenesisDoc, error)
	GetLatestBlock(context.Context, *Empty) (*Block, error)
	GetUnconfirmedTxs(context.Context, *Empty) (*UnconfirmedTxList, error)
	GetConsensusState(context.Context, *Empty) (*ConsensusState, error)
}

func RegisterBlockchainServer(s *grpc.Server, srv BlockchainServer) {
	s.RegisterService(&_Blockchain_serviceDesc, srv)
}

func _Blockchain_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeightParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Blockchain/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).GetBlock(ctx, req.(*HeightParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blockchain_GetBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlocksParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).GetBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Blockchain/GetBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).GetBlocks(ctx, req.(*BlocksParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blockchain_GetBlockchainInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).GetBlockchainInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Blockchain/GetBlockchainInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).GetBlockchainInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blockchain_GetChainId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).GetChainId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Blockchain/GetChainId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).GetChainId(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blockchain_GetGenesis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).GetGenesis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Blockchain/GetGenesis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).GetGenesis(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blockchain_GetLatestBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).GetLatestBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Blockchain/GetLatestBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).GetLatestBlock(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blockchain_GetUnconfirmedTxs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).GetUnconfirmedTxs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Blockchain/GetUnconfirmedTxs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).GetUnconfirmedTxs(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blockchain_GetConsensusState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).GetConsensusState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Blockchain/GetConsensusState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).GetConsensusState(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Blockchain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Blockchain",
	HandlerType: (*BlockchainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBlock",
			Handler:    _Blockchain_GetBlock_Handler,
		},
		{
			MethodName: "GetBlocks",
			Handler:    _Blockchain_GetBlocks_Handler,
		},
		{
			MethodName: "GetBlockchainInfo",
			Handler:    _Blockchain_GetBlockchainInfo_Handler,
		},
		{
			MethodName: "GetChainId",
			Handler:    _Blockchain_GetChainId_Handler,
		},
		{
			MethodName: "GetGenesis",
			Handler:    _Blockchain_GetGenesis_Handler,
		},
		{
			MethodName: "GetLatestBlock",
			Handler:    _Blockchain_GetLatestBlock_Handler,
		},
		{
			MethodName: "GetUnconfirmedTxs",
			Handler:    _Blockchain_GetUnconfirmedTxs_Handler,
		},
		{
			MethodName: "GetConsensusState",
			Handler:    _Blockchain_GetConsensusState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blockchain.proto",
}

func init() { proto.RegisterFile("blockchain.proto", fileDescriptor_blockchain_7e3899cdd33a3484) }

var fileDescriptor_blockchain_7e3899cdd33a3484 = []byte{
	// 962 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x51, 0x6f, 0xe3, 0x44,
	0x10, 0x56, 0x12, 0xc7, 0x75, 0xc6, 0x21, 0x6d, 0x17, 0x84, 0x82, 0x75, 0x3a, 0x82, 0x45, 0x51,
	0x04, 0x95, 0x91, 0x82, 0x40, 0x42, 0x82, 0x87, 0x5e, 0x0b, 0x6d, 0x45, 0xa9, 0xa2, 0x6d, 0xef,
	0x90, 0x90, 0x78, 0xd8, 0xc4, 0x7b, 0xc4, 0xba, 0xd8, 0x1b, 0xd9, 0x1b, 0x5d, 0xef, 0x3f, 0x20,
	0x1e, 0xe0, 0x67, 0xf0, 0x23, 0x78, 0xe4, 0x6f, 0xa1, 0x9d, 0xdd, 0xb5, 0xd7, 0x2e, 0x6f, 0x48,
	0xf7, 0xb6, 0xf3, 0xcd, 0xb7, 0xe3, 0x99, 0xf1, 0x37, 0x63, 0xc3, 0xd1, 0x6a, 0x2b, 0xd6, 0xaf,
	0xd6, 0x1b, 0x96, 0x15, 0xc9, 0xae, 0x14, 0x52, 0x44, 0xe3, 0xb5, 0xc8, 0x73, 0x61, 0xad, 0x77,
	0xd8, 0x7a, 0x2d, 0xf6, 0x85, 0xb4, 0x66, 0xc1, 0xe5, 0x6b, 0x51, 0xbe, 0xd2, 0x66, 0x7c, 0x02,
	0xe1, 0x15, 0xcf, 0x7e, 0xdd, 0xc8, 0x25, 0x2b, 0x59, 0x4e, 0xde, 0x07, 0x7f, 0x83, 0xe6, 0xb4,
	0x37, 0xeb, 0xcd, 0x3d, 0x6a, 0xac, 0xf8, 0x1a, 0xc2, 0x67, 0xea, 0x31, 0x95, 0xa6, 0x3d, 0x81,
	0x51, 0x9e, 0x15, 0x57, 0x2e, 0xb3, 0x01, 0xd0, 0xcb, 0x1e, 0x8c, 0xb7, 0x6f, 0xbc, 0x16, 0x88,
	0x7f, 0xef, 0x83, 0x7f, 0xc5, 0x59, 0xca, 0x4b, 0x32, 0x85, 0x83, 0x73, 0x95, 0xf7, 0xf5, 0x05,
	0x06, 0x19, 0x51, 0x6b, 0xaa, 0x3c, 0x9c, 0xfb, 0x03, 0x6a, 0x2c, 0x42, 0xc0, 0xbb, 0xcf, 0x72,
	0x3e, 0x1d, 0x20, 0x8a, 0x67, 0xc5, 0xbd, 0xdd, 0xe7, 0xf7, 0x0f, 0xd5, 0xd4, 0xd3, 0x5c, 0x6d,
	0x91, 0x19, 0x84, 0x37, 0xac, 0x92, 0x98, 0xf7, 0xf5, 0xc5, 0x74, 0x38, 0xeb, 0xcd, 0xc7, 0xd4,
	0x85, 0xc8, 0x27, 0x30, 0x51, 0xe6, 0xb9, 0xc8, 0xf3, 0x4c, 0x5e, 0xb1, 0x6a, 0x33, 0xf5, 0x91,
	0xd4, 0x41, 0x49, 0x04, 0xc1, 0x05, 0x93, 0x0c, 0x19, 0x07, 0xc8, 0xa8, 0x6d, 0x15, 0xe3, 0x05,
	0xdb, 0x66, 0x29, 0x93, 0xa2, 0xac, 0x90, 0x11, 0xe8, 0x18, 0x6d, 0x54, 0xd5, 0x7a, 0xb6, 0xdb,
	0x21, 0x61, 0x84, 0x04, 0x6b, 0xc6, 0xa7, 0xe0, 0xa9, 0x68, 0xe4, 0x08, 0x06, 0xaa, 0x88, 0xde,
	0x6c, 0x30, 0x1f, 0x53, 0x75, 0x54, 0xd5, 0x6e, 0xd4, 0x85, 0x3e, 0x5e, 0xc0, 0x73, 0xfc, 0x0b,
	0x0c, 0x31, 0x7d, 0x15, 0xd0, 0x96, 0xd6, 0xd3, 0x01, 0x6d, 0x59, 0x1f, 0xda, 0x06, 0xe3, 0xc5,
	0x70, 0x71, 0x90, 0x68, 0x93, 0xda, 0xbe, 0x7f, 0xa0, 0x9f, 0x88, 0x5d, 0x0c, 0x17, 0xc3, 0x44,
	0x19, 0x14, 0xa1, 0xf8, 0x7b, 0x18, 0x61, 0x98, 0x1f, 0xb9, 0x64, 0xff, 0xe3, 0x11, 0xf1, 0x4f,
	0x26, 0xce, 0x4d, 0x56, 0x49, 0xf2, 0x14, 0x40, 0x75, 0xb4, 0xa5, 0x17, 0x07, 0x21, 0x9f, 0x02,
	0xd4, 0x0f, 0xad, 0xa6, 0xfd, 0xd9, 0x60, 0x1e, 0x2e, 0x20, 0xa9, 0x21, 0xea, 0x78, 0xe3, 0xb5,
	0xd5, 0x4c, 0xaa, 0x74, 0x86, 0xc7, 0x5b, 0x96, 0x73, 0x23, 0xa0, 0x06, 0x68, 0xc4, 0x95, 0x62,
	0x8e, 0xb5, 0xb8, 0x52, 0x25, 0x8c, 0x4b, 0x5e, 0xf0, 0x2a, 0xd3, 0xef, 0x6b, 0xa0, 0x85, 0xe1,
	0x40, 0xf1, 0x3f, 0x1e, 0x80, 0xb1, 0x2f, 0xc4, 0xda, 0xb9, 0x80, 0xe2, 0xd3, 0x05, 0xb8, 0x50,
	0x3b, 0x95, 0x7e, 0x37, 0x15, 0x02, 0xde, 0x1d, 0xdb, 0x4a, 0xf3, 0x24, 0x3c, 0x93, 0x53, 0x38,
	0xbe, 0xdc, 0x8a, 0x15, 0xdb, 0x2e, 0x79, 0x99, 0x67, 0x55, 0x95, 0x89, 0x42, 0x0b, 0xd8, 0xa3,
	0x8f, 0x1d, 0xe4, 0x2b, 0x08, 0xce, 0xf4, 0x18, 0x57, 0xd3, 0x21, 0xf6, 0x27, 0x4a, 0x9a, 0x04,
	0xed, 0xd1, 0x50, 0x68, 0xcd, 0x25, 0xdf, 0x00, 0x34, 0x3a, 0x9c, 0xfa, 0x78, 0xf3, 0xc9, 0x7f,
	0xdc, 0xac, 0x49, 0xd4, 0xe1, 0x47, 0x7f, 0xf5, 0x60, 0xd2, 0x0e, 0x8d, 0x32, 0x4e, 0xd3, 0x92,
	0x57, 0x95, 0x95, 0x84, 0x31, 0x55, 0x0b, 0x96, 0xfb, 0xd5, 0x36, 0x5b, 0xff, 0xc0, 0xdf, 0x18,
	0xc5, 0x36, 0x80, 0x1a, 0xd2, 0xb3, 0x5c, 0x45, 0xc0, 0x26, 0x78, 0xd4, 0x58, 0xaa, 0x35, 0xd8,
	0x33, 0x0f, 0x7b, 0x86, 0x67, 0xf2, 0x25, 0x84, 0x6e, 0x53, 0x86, 0xa8, 0xb0, 0x77, 0x13, 0x93,
	0x82, 0xe3, 0xa2, 0x2e, 0x2f, 0xfa, 0xa3, 0x07, 0x47, 0xdd, 0x72, 0xde, 0x4a, 0xbe, 0x11, 0x04,
	0xcf, 0x8b, 0x95, 0x28, 0xd2, 0x7b, 0x81, 0x2f, 0x67, 0x4c, 0x6b, 0x3b, 0xfe, 0x16, 0x8e, 0x9f,
	0x17, 0x6b, 0x51, 0xbc, 0xcc, 0xca, 0x9c, 0xa7, 0xf7, 0x0f, 0x38, 0x0f, 0xcd, 0xc6, 0x32, 0x5b,
	0xd6, 0x6c, 0x2c, 0xb3, 0x01, 0xfa, 0xf5, 0x06, 0x88, 0xff, 0xec, 0x83, 0x7f, 0x27, 0x99, 0xdc,
	0x57, 0xe4, 0x04, 0x82, 0x5b, 0x91, 0xf2, 0xeb, 0xe2, 0xa5, 0xc0, 0x6b, 0xe1, 0x62, 0x94, 0x58,
	0x80, 0xd6, 0xae, 0xae, 0xb8, 0xfb, 0x8f, 0xc4, 0xdd, 0x2e, 0x7c, 0xd0, 0x2d, 0x7c, 0x0e, 0x87,
	0x37, 0x4c, 0x72, 0xb3, 0x24, 0x31, 0x86, 0x87, 0x9c, 0x2e, 0xac, 0x14, 0xec, 0x42, 0x7a, 0xb8,
	0x87, 0x5a, 0xc1, 0x8f, 0x1c, 0x9d, 0xb8, 0x38, 0x47, 0x3e, 0xae, 0xeb, 0x2e, 0xac, 0x2a, 0x50,
	0xd5, 0xbc, 0xe0, 0xa5, 0x7a, 0xaf, 0xb8, 0x70, 0x47, 0xd4, 0x85, 0xe2, 0xdf, 0x7a, 0x00, 0x54,
	0xec, 0x8b, 0x54, 0xb5, 0x86, 0x3b, 0x1f, 0x8b, 0x5e, 0xeb, 0x63, 0xf1, 0x1e, 0x0c, 0x91, 0x65,
	0xbe, 0x21, 0xda, 0xc0, 0x61, 0x94, 0x7c, 0x67, 0x3f, 0x21, 0xea, 0xac, 0x5a, 0x72, 0x27, 0x59,
	0x29, 0x31, 0x2d, 0x3d, 0x84, 0x0d, 0xa0, 0xd6, 0x97, 0xfe, 0x18, 0xa0, 0x5b, 0x57, 0xe8, 0x20,
	0x2a, 0x9d, 0xc9, 0x92, 0xf3, 0xf2, 0x2d, 0xa6, 0x14, 0x41, 0xb0, 0x2c, 0xc5, 0x4e, 0x54, 0x6c,
	0x8b, 0x09, 0x05, 0xb4, 0xb6, 0xe3, 0x07, 0x98, 0x9c, 0x8b, 0xa2, 0xe2, 0x45, 0xb5, 0xaf, 0x74,
	0x36, 0x9f, 0xb9, 0xed, 0x32, 0xe2, 0x09, 0x93, 0x06, 0xa2, 0x6e, 0x37, 0xbf, 0x86, 0xc3, 0x76,
	0x31, 0x76, 0x23, 0x1f, 0x26, 0x6d, 0x9c, 0x76, 0x79, 0x8b, 0xbf, 0xfb, 0x66, 0x91, 0xe3, 0xdf,
	0x08, 0x99, 0x41, 0x70, 0xc9, 0xf5, 0x8b, 0x25, 0xe3, 0xc4, 0xf9, 0xcd, 0x88, 0x7c, 0xbd, 0xdc,
	0xc9, 0x09, 0x8c, 0x2c, 0xa3, 0x22, 0xe3, 0xc4, 0xf9, 0xc5, 0x88, 0xcc, 0xfe, 0xc7, 0x79, 0xf9,
	0x18, 0x8e, 0x2d, 0x0d, 0x23, 0xa3, 0xd0, 0xfd, 0xe4, 0xbb, 0x7c, 0x27, 0xdf, 0x44, 0x07, 0x89,
	0x19, 0x90, 0xa7, 0x6a, 0x67, 0x4b, 0xbb, 0xe4, 0xad, 0x3b, 0x48, 0x2c, 0xf2, 0x11, 0xfa, 0xcd,
	0x24, 0xd4, 0xfe, 0x30, 0x69, 0x2d, 0xfa, 0xc9, 0x25, 0x97, 0x8e, 0x20, 0x6b, 0x9a, 0xcd, 0xf8,
	0x73, 0x4c, 0xa5, 0x35, 0xd2, 0x4d, 0x2c, 0x92, 0x3c, 0x9e, 0xf5, 0x53, 0xbc, 0xd0, 0x79, 0x21,
	0xf6, 0xc2, 0x61, 0xd2, 0x76, 0x3c, 0x0b, 0x7e, 0xf6, 0x57, 0xfb, 0xb2, 0x14, 0xaf, 0x57, 0x3e,
	0xfe, 0x9f, 0x7d, 0xf1, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x78, 0x7b, 0x1e, 0x43, 0xdf, 0x09,
	0x00, 0x00,
}
