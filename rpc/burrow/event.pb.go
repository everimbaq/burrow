// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package burrow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Params
type EventIdParam struct {
	EventId              string   `protobuf:"bytes,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventIdParam) Reset()         { *m = EventIdParam{} }
func (m *EventIdParam) String() string { return proto.CompactTextString(m) }
func (*EventIdParam) ProtoMessage()    {}
func (*EventIdParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_c91b6cc4446486ab, []int{0}
}
func (m *EventIdParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventIdParam.Unmarshal(m, b)
}
func (m *EventIdParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventIdParam.Marshal(b, m, deterministic)
}
func (dst *EventIdParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventIdParam.Merge(dst, src)
}
func (m *EventIdParam) XXX_Size() int {
	return xxx_messageInfo_EventIdParam.Size(m)
}
func (m *EventIdParam) XXX_DiscardUnknown() {
	xxx_messageInfo_EventIdParam.DiscardUnknown(m)
}

var xxx_messageInfo_EventIdParam proto.InternalMessageInfo

func (m *EventIdParam) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

type SubIdParam struct {
	SubId                string   `protobuf:"bytes,1,opt,name=subId,proto3" json:"subId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubIdParam) Reset()         { *m = SubIdParam{} }
func (m *SubIdParam) String() string { return proto.CompactTextString(m) }
func (*SubIdParam) ProtoMessage()    {}
func (*SubIdParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_c91b6cc4446486ab, []int{1}
}
func (m *SubIdParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubIdParam.Unmarshal(m, b)
}
func (m *SubIdParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubIdParam.Marshal(b, m, deterministic)
}
func (dst *SubIdParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubIdParam.Merge(dst, src)
}
func (m *SubIdParam) XXX_Size() int {
	return xxx_messageInfo_SubIdParam.Size(m)
}
func (m *SubIdParam) XXX_DiscardUnknown() {
	xxx_messageInfo_SubIdParam.DiscardUnknown(m)
}

var xxx_messageInfo_SubIdParam proto.InternalMessageInfo

func (m *SubIdParam) GetSubId() string {
	if m != nil {
		return m.SubId
	}
	return ""
}

// Results
type EventUnSub struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventUnSub) Reset()         { *m = EventUnSub{} }
func (m *EventUnSub) String() string { return proto.CompactTextString(m) }
func (*EventUnSub) ProtoMessage()    {}
func (*EventUnSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_c91b6cc4446486ab, []int{2}
}
func (m *EventUnSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventUnSub.Unmarshal(m, b)
}
func (m *EventUnSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventUnSub.Marshal(b, m, deterministic)
}
func (dst *EventUnSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventUnSub.Merge(dst, src)
}
func (m *EventUnSub) XXX_Size() int {
	return xxx_messageInfo_EventUnSub.Size(m)
}
func (m *EventUnSub) XXX_DiscardUnknown() {
	xxx_messageInfo_EventUnSub.DiscardUnknown(m)
}

var xxx_messageInfo_EventUnSub proto.InternalMessageInfo

func (m *EventUnSub) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type EventDataLog struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	Height               uint64   `protobuf:"varint,3,opt,name=Height,proto3" json:"Height,omitempty"`
	Topics               []string `protobuf:"bytes,4,rep,name=Topics,proto3" json:"Topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventDataLog) Reset()         { *m = EventDataLog{} }
func (m *EventDataLog) String() string { return proto.CompactTextString(m) }
func (*EventDataLog) ProtoMessage()    {}
func (*EventDataLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_c91b6cc4446486ab, []int{3}
}
func (m *EventDataLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventDataLog.Unmarshal(m, b)
}
func (m *EventDataLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventDataLog.Marshal(b, m, deterministic)
}
func (dst *EventDataLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventDataLog.Merge(dst, src)
}
func (m *EventDataLog) XXX_Size() int {
	return xxx_messageInfo_EventDataLog.Size(m)
}
func (m *EventDataLog) XXX_DiscardUnknown() {
	xxx_messageInfo_EventDataLog.DiscardUnknown(m)
}

var xxx_messageInfo_EventDataLog proto.InternalMessageInfo

func (m *EventDataLog) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *EventDataLog) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *EventDataLog) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *EventDataLog) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

type EventDataTx struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=Tx,proto3" json:"Tx,omitempty"`
	Return               []byte   `protobuf:"bytes,2,opt,name=Return,proto3" json:"Return,omitempty"`
	Exception            string   `protobuf:"bytes,3,opt,name=Exception,proto3" json:"Exception,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventDataTx) Reset()         { *m = EventDataTx{} }
func (m *EventDataTx) String() string { return proto.CompactTextString(m) }
func (*EventDataTx) ProtoMessage()    {}
func (*EventDataTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_c91b6cc4446486ab, []int{4}
}
func (m *EventDataTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventDataTx.Unmarshal(m, b)
}
func (m *EventDataTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventDataTx.Marshal(b, m, deterministic)
}
func (dst *EventDataTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventDataTx.Merge(dst, src)
}
func (m *EventDataTx) XXX_Size() int {
	return xxx_messageInfo_EventDataTx.Size(m)
}
func (m *EventDataTx) XXX_DiscardUnknown() {
	xxx_messageInfo_EventDataTx.DiscardUnknown(m)
}

var xxx_messageInfo_EventDataTx proto.InternalMessageInfo

func (m *EventDataTx) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *EventDataTx) GetReturn() []byte {
	if m != nil {
		return m.Return
	}
	return nil
}

func (m *EventDataTx) GetException() string {
	if m != nil {
		return m.Exception
	}
	return ""
}

type Event struct {
	Event                string         `protobuf:"bytes,1,opt,name=Event,proto3" json:"Event,omitempty"`
	EventDataTx          *EventDataTx   `protobuf:"bytes,2,opt,name=EventDataTx,proto3" json:"EventDataTx,omitempty"`
	EventDataCall        *EventDataCall `protobuf:"bytes,3,opt,name=EventDataCall,proto3" json:"EventDataCall,omitempty"`
	EventDataLog         *EventDataLog  `protobuf:"bytes,4,opt,name=EventDataLog,proto3" json:"EventDataLog,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_c91b6cc4446486ab, []int{5}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *Event) GetEventDataTx() *EventDataTx {
	if m != nil {
		return m.EventDataTx
	}
	return nil
}

func (m *Event) GetEventDataCall() *EventDataCall {
	if m != nil {
		return m.EventDataCall
	}
	return nil
}

func (m *Event) GetEventDataLog() *EventDataLog {
	if m != nil {
		return m.EventDataLog
	}
	return nil
}

type PollResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollResponse) Reset()         { *m = PollResponse{} }
func (m *PollResponse) String() string { return proto.CompactTextString(m) }
func (*PollResponse) ProtoMessage()    {}
func (*PollResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_c91b6cc4446486ab, []int{6}
}
func (m *PollResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollResponse.Unmarshal(m, b)
}
func (m *PollResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollResponse.Marshal(b, m, deterministic)
}
func (dst *PollResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollResponse.Merge(dst, src)
}
func (m *PollResponse) XXX_Size() int {
	return xxx_messageInfo_PollResponse.Size(m)
}
func (m *PollResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PollResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PollResponse proto.InternalMessageInfo

func (m *PollResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*EventIdParam)(nil), "EventIdParam")
	proto.RegisterType((*SubIdParam)(nil), "SubIdParam")
	proto.RegisterType((*EventUnSub)(nil), "EventUnSub")
	proto.RegisterType((*EventDataLog)(nil), "EventDataLog")
	proto.RegisterType((*EventDataTx)(nil), "EventDataTx")
	proto.RegisterType((*Event)(nil), "Event")
	proto.RegisterType((*PollResponse)(nil), "PollResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventsClient is the client API for Events service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventsClient interface {
	EventPoll(ctx context.Context, in *SubIdParam, opts ...grpc.CallOption) (*PollResponse, error)
	EventSubscribe(ctx context.Context, in *EventIdParam, opts ...grpc.CallOption) (*SubIdParam, error)
	EventUnsubscribe(ctx context.Context, in *SubIdParam, opts ...grpc.CallOption) (*EventUnSub, error)
}

type eventsClient struct {
	cc *grpc.ClientConn
}

func NewEventsClient(cc *grpc.ClientConn) EventsClient {
	return &eventsClient{cc}
}

func (c *eventsClient) EventPoll(ctx context.Context, in *SubIdParam, opts ...grpc.CallOption) (*PollResponse, error) {
	out := new(PollResponse)
	err := c.cc.Invoke(ctx, "/Events/EventPoll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventsClient) EventSubscribe(ctx context.Context, in *EventIdParam, opts ...grpc.CallOption) (*SubIdParam, error) {
	out := new(SubIdParam)
	err := c.cc.Invoke(ctx, "/Events/EventSubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventsClient) EventUnsubscribe(ctx context.Context, in *SubIdParam, opts ...grpc.CallOption) (*EventUnSub, error) {
	out := new(EventUnSub)
	err := c.cc.Invoke(ctx, "/Events/EventUnsubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventsServer is the server API for Events service.
type EventsServer interface {
	EventPoll(context.Context, *SubIdParam) (*PollResponse, error)
	EventSubscribe(context.Context, *EventIdParam) (*SubIdParam, error)
	EventUnsubscribe(context.Context, *SubIdParam) (*EventUnSub, error)
}

func RegisterEventsServer(s *grpc.Server, srv EventsServer) {
	s.RegisterService(&_Events_serviceDesc, srv)
}

func _Events_EventPoll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubIdParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventsServer).EventPoll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Events/EventPoll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventsServer).EventPoll(ctx, req.(*SubIdParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Events_EventSubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventIdParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventsServer).EventSubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Events/EventSubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventsServer).EventSubscribe(ctx, req.(*EventIdParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _Events_EventUnsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubIdParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventsServer).EventUnsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Events/EventUnsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventsServer).EventUnsubscribe(ctx, req.(*SubIdParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _Events_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Events",
	HandlerType: (*EventsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EventPoll",
			Handler:    _Events_EventPoll_Handler,
		},
		{
			MethodName: "EventSubscribe",
			Handler:    _Events_EventSubscribe_Handler,
		},
		{
			MethodName: "EventUnsubscribe",
			Handler:    _Events_EventUnsubscribe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "event.proto",
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_event_c91b6cc4446486ab) }

var fileDescriptor_event_c91b6cc4446486ab = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xdf, 0xaa, 0x9b, 0x40,
	0x10, 0xc6, 0x31, 0xf1, 0xd8, 0xe3, 0x68, 0x42, 0x59, 0x4a, 0x91, 0x43, 0x29, 0x61, 0x29, 0xd4,
	0x8b, 0xb0, 0x50, 0xdb, 0x17, 0xe8, 0x9f, 0x40, 0x0b, 0xbd, 0x08, 0xab, 0xbd, 0xe9, 0x9d, 0x9a,
	0x25, 0x15, 0x8c, 0x2b, 0xbb, 0xda, 0xfa, 0x12, 0x7d, 0x9d, 0x3e, 0x5f, 0xd9, 0x71, 0x4d, 0xb2,
	0x77, 0xf3, 0xfb, 0xfc, 0x66, 0xbe, 0x65, 0x1c, 0x88, 0xc4, 0x6f, 0xd1, 0x0d, 0xac, 0x57, 0x72,
	0x90, 0x4f, 0x71, 0x2d, 0x2f, 0x17, 0xd9, 0xcd, 0x44, 0x53, 0x88, 0x0f, 0xe6, 0xe3, 0xb7, 0xd3,
	0xb1, 0x54, 0xe5, 0x85, 0x24, 0xf0, 0x4c, 0xcc, 0x9c, 0x78, 0x3b, 0x2f, 0x0d, 0xf9, 0x82, 0x94,
	0x02, 0xe4, 0x63, 0xb5, 0xf8, 0x5e, 0xc0, 0x83, 0x36, 0x64, 0x5d, 0x33, 0xd0, 0x37, 0x00, 0x38,
	0xed, 0x47, 0x97, 0x8f, 0x15, 0x79, 0x09, 0x81, 0x12, 0x7a, 0x6c, 0x07, 0x34, 0x3d, 0x72, 0x4b,
	0xb4, 0xb5, 0x99, 0x5f, 0xca, 0xa1, 0xfc, 0x2e, 0xcf, 0x26, 0xf3, 0xe3, 0xe9, 0xa4, 0x84, 0xd6,
	0x68, 0x8c, 0xf9, 0x82, 0x84, 0x80, 0x6f, 0x4c, 0xc9, 0x0a, 0x65, 0xac, 0xcd, 0xd4, 0xaf, 0xa2,
	0x39, 0xff, 0x1a, 0x92, 0xf5, 0xce, 0x4b, 0x7d, 0x6e, 0xc9, 0xe8, 0x85, 0xec, 0x9b, 0x5a, 0x27,
	0xfe, 0x6e, 0x9d, 0x86, 0xdc, 0x12, 0xcd, 0x21, 0xba, 0xa6, 0x15, 0x13, 0xd9, 0xc2, 0xaa, 0x98,
	0x6c, 0xce, 0xaa, 0x98, 0x4c, 0x1b, 0x17, 0xc3, 0xa8, 0x3a, 0x1b, 0x62, 0x89, 0xbc, 0x82, 0xf0,
	0x30, 0xd5, 0xa2, 0x1f, 0x1a, 0xd9, 0x61, 0x52, 0xc8, 0x6f, 0x02, 0xfd, 0xe7, 0xc1, 0x03, 0x4e,
	0x35, 0x8b, 0xc0, 0x62, 0x59, 0xc4, 0xac, 0x32, 0x27, 0x14, 0x47, 0x47, 0x59, 0xcc, 0xee, 0x34,
	0xee, 0xbc, 0xea, 0x03, 0x6c, 0xae, 0xf8, 0xb9, 0x6c, 0x5b, 0x4c, 0x8c, 0xb2, 0x2d, 0x73, 0x54,
	0xee, 0x9a, 0xc8, 0x3b, 0x77, 0x91, 0x89, 0x8f, 0x4d, 0x1b, 0x76, 0x2f, 0x72, 0xc7, 0x42, 0x19,
	0xc4, 0x47, 0xd9, 0xb6, 0x5c, 0xe8, 0x5e, 0x76, 0x5a, 0x90, 0xd7, 0x10, 0xe0, 0x0f, 0x36, 0xab,
	0x5f, 0xa7, 0x51, 0x16, 0xcc, 0xcd, 0xdc, 0xaa, 0xd9, 0x5f, 0x0f, 0x02, 0x54, 0x34, 0x79, 0x0b,
	0x21, 0x56, 0xa6, 0x9f, 0x44, 0xec, 0x76, 0x0c, 0x4f, 0x1b, 0xe6, 0xcc, 0xdc, 0xc3, 0x16, 0x8d,
	0xf9, 0x58, 0xe9, 0x5a, 0x35, 0x95, 0x20, 0xf6, 0x49, 0x8b, 0xff, 0xbe, 0x99, 0xec, 0xe1, 0xb9,
	0xbd, 0x19, 0x7d, 0xf5, 0x3b, 0xd3, 0x23, 0x76, 0xbb, 0xa9, 0x4f, 0x8f, 0x3f, 0x83, 0x6a, 0x54,
	0x4a, 0xfe, 0xa9, 0x02, 0x3c, 0xe0, 0xf7, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xe2, 0x23, 0x80,
	0xae, 0xdd, 0x02, 0x00, 0x00,
}
